folder 2
document.getElementById("id")
— หา องค์ประกอบ (element) ในหน้าเว็บที่มี id ตรงกับที่ระบุ เช่น หา <input> หรือ <button> ที่มี id="bgColor" เพื่อใช้งานกับมัน

element.value
— ดึงค่าที่ผู้ใช้กรอกหรือเลือกใน input/select นั้น ๆ หรือใช้เพื่อกำหนดค่าให้ input/select ได้เช่นกัน

localStorage.setItem(key, value)
— บันทึกข้อมูลเก็บไว้ในเครื่องของผู้ใช้ โดย key คือชื่อที่จะเรียกข้อมูล และ value คือค่าที่จะเก็บ

localStorage.getItem(key)
— ดึงข้อมูลที่เคยเก็บไว้ด้วยชื่อ key กลับมาใช้งาน

localStorage.clear()
— ลบข้อมูลทั้งหมดที่เก็บไว้ใน localStorage (เหมือนล้างข้อมูล)

document.body.style.property = value
— เปลี่ยนสไตล์ของหน้าเว็บ เช่น backgroundColor, color, fontSize โดยตรงกับ <body>

addEventListener("event", callback)
— กำหนดให้ ฟังก์ชัน (callback) ทำงานเมื่อเกิดเหตุการณ์นั้น ๆ เช่น "click" คือกดปุ่ม, "DOMContentLoaded" คือเมื่อโหลดหน้าเว็บเสร็จ

location.reload()
— โหลดหน้าเว็บใหม่อีกครั้ง (รีเฟรชหน้า)

ลำดับขั้นตอนการทำงานของโค้ด
1. หน้าเว็บเริ่มโหลด (Browser โหลด index.html และ script.js)
เบราว์เซอร์โหลด HTML และแสดง UI (อินพุตสีพื้นหลัง, สีตัวอักษร, ขนาดฟอนต์, ปุ่ม Save/Reset)
2. เมื่อ DOM โหลดเสร็จสมบูรณ์ (DOMContentLoaded)
JavaScript ใน script.js ทำงานส่วนนี้ทันที
ดึงข้อมูลค่าเก่าจาก localStorage (ถ้ามี)
bgColor = ค่าสีพื้นหลังเก่า
FColor = ค่าสีตัวอักษรเก่า
fontSize = ขนาดฟอนต์เก่า
ถ้ามีข้อมูลเหล่านี้อยู่
เปลี่ยนสไตล์ของ <body> ตามค่าที่ดึงมา พื้นหลัง, สีตัวอักษร, ขนาดฟอนต์
ตั้งค่าช่องอินพุตสีและตัวเลือกขนาดฟอนต์ในหน้าเว็บให้แสดงค่าเดิมด้วย (เพื่อให้เห็นว่าค่าปัจจุบันคืออะไร)

3. เมื่อผู้ใช้เปลี่ยนค่าในช่องเลือกสีหรือขนาดฟอนต์ แล้วกดปุ่ม Save
โค้ดจับเหตุการณ์คลิกที่ปุ่ม Save
ดึงค่าที่ผู้ใช้เลือกจาก
ช่องสีพื้นหลัง (bgColor)
ช่องสีตัวอักษร (FColor)
ตัวเลือกขนาดฟอนต์ (fontSize)
บันทึกค่าที่เลือกลงใน localStorage เพื่อเก็บไว้ใช้ครั้งหน้า
อัปเดตสไตล์ของหน้าเว็บทันทีตามค่าที่เลือก (เปลี่ยนสีพื้นหลัง, สีตัวอักษร, และขนาดฟอนต์)

4. เมื่อผู้ใช้กดปุ่ม Reset
โค้ดจับเหตุการณ์คลิกที่ปุ่ม Reset
ล้างข้อมูลทั้งหมดใน localStorage (ลบค่าที่บันทึกไว้)
โหลดหน้าเว็บใหม่ (location.reload()) เพื่อรีเซ็ตหน้าเว็บกลับเป็นค่าเริ่มต้น (ค่าที่ไม่ได้ตั้งเอง)


folder 1
1. static get(name)
ใช้เพื่อ อ่านค่าของคุกกี้ ที่ชื่อ name
ขั้นตอน:
สร้างตัวแปร cookieName เป็นชื่อคุกกี้พร้อม = และเข้ารหัส URL (encodeURIComponent) เพื่อความปลอดภัย
หา index ของคุกกี้นั้นใน document.cookie (ซึ่งเป็นสตริงคุกกี้ทั้งหมด)
ถ้าพบ (cookieStart > -1):
หาจุดสิ้นสุดของคุกกี้ตัวนั้นในสตริง (ตำแหน่ง ; หรือจบสตริง)
ดึงค่า (substring) ระหว่างชื่อคุกกี้กับตำแหน่งจบ
ถอดรหัสค่า (decodeURIComponent)
ถ้าไม่พบคุกกี้ คืนค่า null
2. static set(name, value, expires)
ใช้เพื่อ ตั้งค่าหรืออัปเดตคุกกี้
สร้างสตริง cookieText ที่มีรูปแบบ name=value (เข้ารหัสทั้งชื่อและค่า)
ถ้าใส่พารามิเตอร์ expires และมันเป็นวันที่ (Date object) จะเพิ่มส่วน ;expires=... เพื่อกำหนดวันหมดอายุคุกกี้
ตั้งค่า document.cookie ให้เป็นคุกกี้นั้น (ซึ่งเป็นการเพิ่ม/แก้ไขคุกกี้ในเบราว์เซอร์)
มี console.log เพื่อแสดงวันที่หมดอายุและคุกกี้ปัจจุบัน (ใช้สำหรับดีบัก)
3. static unset(name)
ใช้เพื่อ ลบคุกกี้
วิธีการคือการตั้งคุกกี้ตัวนั้นอีกครั้ง โดยให้ค่าของมันเป็น '' (ค่าว่าง) และกำหนดวันหมดอายุเป็นวันที่ 1 ม.ค. 1970 (new Date(0))
— การทำแบบนี้จะทำให้คุกกี้ถูกลบจากเบราว์เซอร์
